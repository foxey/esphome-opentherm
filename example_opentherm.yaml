esphome:
  name: example-opentherm

esp8266:
  board: d1_mini

# Enable Home Assistant API
api:
  password: !secret ha_api_password
  encryption:
    key: !secret ha_api_encryption_key

ota:
  password: !secret ha_api_password
  on_begin:
    then:
      - lambda: |-
          ESP_LOGI("custom", "Disable Interrupts, to allow OTA without interrupts");
          InterruptLock lock;
          delay(500);

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

# Enable logging
logger:
  baud_rate: 0
  level: DEBUG
  esp8266_store_log_strings_in_flash: False

external_components:
#  source: github://foxey/esphome-opentherm
  source: components
  components: [opentherm]

opentherm:
  responder_read_pin: 12
  responder_write_pin: 13
  controller_read_pin: 4
  controller_write_pin: 5

sensor:
  - platform: opentherm
    ch_min_temperature:
      name: "CH minimum temperature"
    ch_max_temperature:
      name: "CH maximum temperature"
    dhw_min_temperature:
      name: "DHW minimum temperature"
    dhw_max_temperature:
      name: "DHW maximum temperature"
    pressure:
      name: "pressure"
    modulation:
      name: "modulation"
    boiler_temperature:
      name: "boiler temperature"
    return_temperature:
      name: "return temperature"

binary_sensor:
  - platform: opentherm
    ch_active:
      name: "CH active"
    dhw_active:
      name: "DHW active"
    flame_active:
      name: "flame active"
    fault:
      name: "fault"
    diagnostic:
      name: "diagnostic"

switch:
  - platform: opentherm
    ch_enabled:
      name: "CH enabled"
    dhw_enabled:
      name: "DHW enabled"

number:
  - platform: opentherm
    ch_setpoint_temperature:
      name: "CH setpoint temperature"
      min_value: 20.0
      max_value: 45.0
      step: 0.5
      restore_value: true
    dhw_setpoint_temperature:
      name: "DHW setpoint temperature"
      min_value: 38.0
      max_value: 60.0
      step: 0.5
      restore_value: true
